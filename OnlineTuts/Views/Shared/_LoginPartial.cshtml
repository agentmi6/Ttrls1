@using Microsoft.AspNet.Identity
@using OnlineTuts.Models;
@using Microsoft.AspNet.Identity.EntityFramework
@using Microsoft.AspNet.Identity
@model LogInRegisterViewModel


@if (Request.IsAuthenticated)
{
    using (ApplicationDbContext db = new ApplicationDbContext())
    {
        var userManager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(db));
        var user = userManager.FindByName(User.Identity.GetUserName());
        ViewBag.CurrentUserAvatar = user.ProfileAvatar;
        ViewBag.UserName = user.UserName;
    }

    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()

        <ul class="nav navbar-nav navbar-right">
            <li class="dropdown">
                <a href="#" id="profile-btn" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                    <img src="@ViewBag.CurrentUserAvatar" alt="Alternate Text" class="avatar" />
                </a>
                <ul class="dropdown-menu">
                    <li>
                        <a href="@Url.Action("UserProfile","UserManagement", new { name = ViewBag.CurrentUser })">
                            <span class="glyphicon glyphicon-user"></span>
                            Profile
                        </a>
                    </li>
                    <li>
                        <a href="#">
                            <span class="glyphicon glyphicon-cog"></span>
                            Preferences
                        </a>
                    </li>
                    <li class="divider"></li>
                    <li>
                        <a href="javascript:document.getElementById('logoutForm').submit()">
                            <span class="glyphicon glyphicon-log-out"></span>
                            Log off
                        </a>
                    </li>
                </ul>
            </li>
        </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>
            <a id="modalBtn" data-toggle="modal" href="#myModal">Open Modal</a>
        </li>
        <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>

    <div class="modal fade" id="myModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content mc">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6 login-modal">
                            <section id="loginForm">
                                @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <h4>Use a local account to log in.</h4>
                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        <div class="col-md-12 login-input">
                                            @Html.TextBoxFor(m => m.login.UserName, new { @class = "form-control login-inputs", @placeholder = "User Name" })
                                            <span class="glyphicon glyphicon-user login-glyphs"></span>
                                            @Html.ValidationMessageFor(m => m.login.UserName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-12 login-input">
                                            @Html.PasswordFor(m => m.login.Password, new { @class = "form-control login-inputs", @placeholder = "Password" })
                                            <span class="glyphicon glyphicon-lock login-glyphs"></span>
                                            @Html.ValidationMessageFor(m => m.login.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-12 login-btn">
                                            <input type="submit" value="Log in" class="btn btn-primary btn-block" />
                                        </div>
                                    </div>
                                    @* Enable this once you have account confirmation enabled for password reset functionality
                                        <p>
                                            @Html.ActionLink("Forgot your password?", "ForgotPassword")
                                        </p>*@
                                }
                            </section>
                        </div>
                        <div class="col-md-12 register-modal">
                            <h4>Create new account</h4>
                            <a href="@Url.Action("Register","Account")" class="btn btn-success btn-block">Register</a>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div><!-- /.modal -->
    </div>
}
@*@section scripts
    {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
